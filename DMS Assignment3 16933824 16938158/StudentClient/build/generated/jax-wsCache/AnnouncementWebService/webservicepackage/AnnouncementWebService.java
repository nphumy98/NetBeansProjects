
package webservicepackage;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AnnouncementWebService", targetNamespace = "http://WebServicePackage/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AnnouncementWebService {


    /**
     * 
     * @return
     *     returns java.util.List<webservicepackage.Announcement>
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAnnouncementList", targetNamespace = "http://WebServicePackage/", className = "webservicepackage.GetAnnouncementList")
    @ResponseWrapper(localName = "getAnnouncementListResponse", targetNamespace = "http://WebServicePackage/", className = "webservicepackage.GetAnnouncementListResponse")
    @Action(input = "http://WebServicePackage/AnnouncementWebService/getAnnouncementListRequest", output = "http://WebServicePackage/AnnouncementWebService/getAnnouncementListResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://WebServicePackage/AnnouncementWebService/getAnnouncementList/Fault/Exception")
    })
    public List<Announcement> getAnnouncementList()
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<webservicepackage.Announcement>
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "selectAllAnnouncementDB", targetNamespace = "http://WebServicePackage/", className = "webservicepackage.SelectAllAnnouncementDB")
    @ResponseWrapper(localName = "selectAllAnnouncementDBResponse", targetNamespace = "http://WebServicePackage/", className = "webservicepackage.SelectAllAnnouncementDBResponse")
    @Action(input = "http://WebServicePackage/AnnouncementWebService/selectAllAnnouncementDBRequest", output = "http://WebServicePackage/AnnouncementWebService/selectAllAnnouncementDBResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://WebServicePackage/AnnouncementWebService/selectAllAnnouncementDB/Fault/Exception")
    })
    public List<Announcement> selectAllAnnouncementDB()
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns webservicepackage.Announcement
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "makeAnnouncementObject", targetNamespace = "http://WebServicePackage/", className = "webservicepackage.MakeAnnouncementObject")
    @ResponseWrapper(localName = "makeAnnouncementObjectResponse", targetNamespace = "http://WebServicePackage/", className = "webservicepackage.MakeAnnouncementObjectResponse")
    @Action(input = "http://WebServicePackage/AnnouncementWebService/makeAnnouncementObjectRequest", output = "http://WebServicePackage/AnnouncementWebService/makeAnnouncementObjectResponse")
    public Announcement makeAnnouncementObject(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addAnnouncement", targetNamespace = "http://WebServicePackage/", className = "webservicepackage.AddAnnouncement")
    @ResponseWrapper(localName = "addAnnouncementResponse", targetNamespace = "http://WebServicePackage/", className = "webservicepackage.AddAnnouncementResponse")
    @Action(input = "http://WebServicePackage/AnnouncementWebService/addAnnouncementRequest", output = "http://WebServicePackage/AnnouncementWebService/addAnnouncementResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://WebServicePackage/AnnouncementWebService/addAnnouncement/Fault/Exception")
    })
    public int addAnnouncement(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2)
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "initAnnouncement", targetNamespace = "http://WebServicePackage/", className = "webservicepackage.InitAnnouncement")
    @ResponseWrapper(localName = "initAnnouncementResponse", targetNamespace = "http://WebServicePackage/", className = "webservicepackage.InitAnnouncementResponse")
    @Action(input = "http://WebServicePackage/AnnouncementWebService/initAnnouncementRequest", output = "http://WebServicePackage/AnnouncementWebService/initAnnouncementResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://WebServicePackage/AnnouncementWebService/initAnnouncement/Fault/Exception")
    })
    public int initAnnouncement()
        throws Exception_Exception
    ;

}
